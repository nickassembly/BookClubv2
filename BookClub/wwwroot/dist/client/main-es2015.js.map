{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/customers/customers.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/customers/customers.component.ts","webpack:///./src/app/guards/auth-guard.service.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1>Customers</h1>\\n<ul>\\n  <li *ngFor=\\\"let cust of customers\\\">{{ cust }}</li>\\n</ul>\"","module.exports = \"<h1>Home Page</h1>\\n\\n<br>\\n<div *ngIf=\\\"isUserAuthenticated()\\\" style=\\\"color:blue;\\\">\\n  <h2>\\n    YOU ARE LOGGED IN\\n  </h2>\\n</div>\\n\\n<br>\\n<ul>\\n  <li><a routerLink=\\\"/customers\\\">Customer</a></li>\\n  <li *ngIf=\\\"!isUserAuthenticated()\\\"><a routerLink=\\\"/login\\\">Login</a></li>\\n  <li *ngIf=\\\"isUserAuthenticated()\\\"><a class=\\\"logout\\\" (click)=\\\"logOut()\\\">Logout</a></li>\\n</ul>\"","module.exports = \"<form class=\\\"form-signin\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(loginForm)\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <h2 class=\\\"form-signin-heading\\\">Login</h2>\\n        <div *ngIf=\\\"invalidLogin\\\" class=\\\"alert alert-danger\\\">Invalid username or password.</div>\\n        <br/>\\n        <label for=\\\"username\\\" class=\\\"sr-only\\\">Email address</label>\\n        <input type=\\\"email\\\" id=\\\"username\\\" name=\\\"username\\\" ngModel class=\\\"form-control\\\" placeholder=\\\"User Name\\\" required autofocus>\\n        <br/>\\n        <label for=\\\"password\\\" class=\\\"sr-only\\\">Password</label>\\n        <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" ngModel class=\\\"form-control\\\" placeholder=\\\"Password\\\" required>\\n        <br/>\\n        <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Sign in</button>\\n    </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n  <router-outlet></router-outlet>\n  `,\n  styles: []\n})\nexport class AppComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { AuthGuard } from './guards/auth-guard.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { JwtModule } from \"@auth0/angular-jwt\";\n\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { AppComponent } from './app.component';\n\nexport function tokenGetter() {\n  return localStorage.getItem(\"jwt\");\n}\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    LoginComponent,\n    CustomersComponent,\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: '', component: HomeComponent },\n      { path: 'login', component: LoginComponent },\n      { path: 'customers', component: CustomersComponent, canActivate: [AuthGuard] },\n    ]),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        whitelistedDomains: [\"localhost:5000\"],\n        blacklistedRoutes: []\n      }\n    })\n  ],\n  providers: [AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: []\n})\nexport class CustomersComponent implements OnInit  {\n  customers: any;\n \n  constructor(private http: HttpClient) { }\n \n  ngOnInit() {\n    this.http.get(\"http://localhost:5000/api/customers\", {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })\n    }).subscribe(response => {\n      this.customers = response;\n    }, err => {\n      console.log(err)\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private jwtHelper: JwtHelperService, private router: Router) {\n  }\n  canActivate() {\n    const token = localStorage.getItem(\"jwt\");\n\n    if (token && !this.jwtHelper.isTokenExpired(token)){\n      console.log(this.jwtHelper.decodeToken(token));\n      return true;\n    }\n    this.router.navigate([\"login\"]);\n    return false;\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: []\n})\nexport class HomeComponent {\n\n  constructor(private jwtHelper: JwtHelperService, private router: Router) {\n  }\n\n  isUserAuthenticated() {\n    const token: string = localStorage.getItem(\"jwt\");\n    if (token && !this.jwtHelper.isTokenExpired(token)) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  public logOut = () => {\n    localStorage.removeItem(\"jwt\");\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n  invalidLogin: boolean;\n\n  constructor(private router: Router, private http: HttpClient) { }\n\n  public login = (form: NgForm) => {\n    const credentials = JSON.stringify(form.value);\n    this.http.post(\"http://localhost:5000/api/auth/login\", credentials, {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })\n    }).subscribe(response => {\n      const token = (<any>response).token;\n      localStorage.setItem(\"jwt\", token);\n      this.invalidLogin = false;\n      this.router.navigate([\"/\"]);\n    }, err => {\n      this.invalidLogin = true;\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}